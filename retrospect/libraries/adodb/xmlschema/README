adodb-xmlschema
------------------------------------------------------------------------------------------------------------------------------------
Written by Richard Tango-Lowy.
For more information, contact richtl@arscognita.com or visit our site at www.arscognita.com.

To report bugs or comments, see the ADOdb main README file.

Introduction:

adodb-xmlschema is a class that allows the user to quickly and easily build a database on any 
ADOdb-supported platform using a simple XML format.

This library is dual-licensed under a BSD-style license and under the GNU LESSER PUBLIC LICENSE.
See the LICENSE file for more information.

Features:

  * Darned easy to install 
  * Quickly to create schemas that build on any platform supported by ADODB.

Notes:

See the INSTALL file for installation notes.
See docs/index.html for documentation, including installation, use, and tutorials.

New for this release:

	20031117 Snapshot
	- Fixed problems with dropping indexes (Thanks Karsten!)
	- Added new PrintSchema method to print the SQL array to the display in HTML or TEXT format,
		or to simply return the SQL array without printing it.
	- Added new SaveSchema method to save the SQL array to the local filesystem as a list of SQL
		statements.
	- Much better support for object prefixes. Calling adoSchema->setPrefix( "myprefix")
		will now automatically prepend "myprefix_" to all tables and indexes. All
		basic INSERT, DELETE, and UPDATE SQL queries will automatically be prefixed as well.
		You can over-ride prefixing in the schema's "SQL" tag by specifying a "prefixmethod" 
		and/or a "key" as follows: <SQL prefixmethod="AUTO|MANUAL|NONE" key="newkey">
		For example:
		
		<SQL prefixmethod="none"> turns of prefixing for this query set </SQL>
		
		<SQL prefixmethod="manual"> select foo from %%_bar </SQL> Replaces all instances
			of "%%_" (the default key) with the prefix specified by setPrefix().
			
		<SQL prefixmethod="manual" key="P_"> select foo from P_bar </SQL> Replaces all instances
			of "P_" (a custom key) with the prefix specified by setPrefix().
			
		<SQL prefixmethod="auto"> select foo from %%_bar </SQL> Functions like the "manual"
			prefix method, except that INSERT, UPDATE, and DELETE statements will be automatically
			prefixed.
	
	20031001 Snapshot
	- upgradeSchema() now drops and recreates any indexes that exist in the schema file.
	- It is now possible to drop a table or index by inserting a <DROP/> tag:
	
		<table name="oldtable"><DROP/></table> or
		<index name="oldindex"><DROP/></index>
		
	20030924 Snapshot
	- The upgrade code actually works. To upgrade an existing database to the provided
		schema, call the upgradeSchema method after creating the adoSchema object:
		
		$schema = new adoSchema( 'dbname' );
		$schema->upgradeSchema();
		
		The "upgrade" and "forceReplace" arguments in the adoSchema call have been
		deprecated in favor of the new upgradeSchema method.
		
		The upgrade code has not yet been thoroughly tested, so use it at your own risk
		and kindly report the bugs!

Thanks:

Thanks to John Lim for giving us ADODB, and for the hard work that keeps it on top of things. 
And particulary for the datadict code that made xmlschema possible.
And to Mike Benoit (http://phpgacl.sourceforge.net) for a recent patch or two and some good ideas.
And to the kind folks at PHP Documentor. Cool tool.
And to Linus. I thought the end of Amiga was the end of computing. Guess I was wrong :-)

------------------------------------------------------------------------------------------------------------------------------------
If you have any questions or comments, please email them to me at richtl@arscognita.com.

$Id$